(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{363:function(e,t,a){"use strict";a.r(t);var s=a(42),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"migrations"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#migrations"}},[e._v("#")]),e._v(" Migrations")]),e._v(" "),a("h2",{attrs:{id:"introduction"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[e._v("#")]),e._v(" Introduction")]),e._v(" "),a("p",[e._v("Migrations are typically paired with Kasfy's schema builder to build your application's database schema. If you have ever had to tell a teammate to manually add a column to their local database schema, you've faced the problem that database migrations solve.")]),e._v(" "),a("h2",{attrs:{id:"generating-migrations"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#generating-migrations"}},[e._v("#")]),e._v(" Generating Migrations")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("\n    kasfy make:migration "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("users")]),e._v("\n\n")])])]),a("h2",{attrs:{id:"migration-structure"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#migration-structure"}},[e._v("#")]),e._v(" Migration Structure")]),e._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"users"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("//This key represending table name")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"primary"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"id"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// Auto initializing primary key as id")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"fields"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// Set you want field names and types")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"varchar(255) NOT NULL"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"email"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"varchar(255) NOT NULL UNIQUE"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"password"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"varchar(255)"')]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),a("h2",{attrs:{id:"running-migrations"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#running-migrations"}},[e._v("#")]),e._v(" Running Migrations")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("\n    kasfy migrate\n    \n")])])]),a("p",[e._v("Drop tables and re-migrate")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("\n    kasfy migrate:fresh\n\n")])])]),a("h2",{attrs:{id:"string-data-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string-data-types"}},[e._v("#")]),e._v(" String data types")]),e._v(" "),a("p",[a("strong",[a("code",[e._v("CHAR(size)")])]),e._v(": A FIXED length string (can contain letters, numbers, and special characters). The size parameter specifies the column length in characters - can be from 0 to 255. Default is 1")]),e._v(" "),a("p",[a("strong",[a("code",[e._v("VARCHAR(size)")])]),e._v(":   A VARIABLE length string (can contain letters, numbers, and special characters). The size parameter specifies the maximum column length in characters - can be from 0 to 65535")]),e._v(" "),a("p",[a("strong",[a("code",[e._v("BINARY(size)")])]),e._v(":    Equal to CHAR(), but stores binary byte strings. The size parameter specifies the column length in bytes. Default is 1")]),e._v(" "),a("p",[a("strong",[a("code",[e._v("VARBINARY(size)")])]),e._v(": Equal to VARCHAR(), but stores binary byte strings. The size parameter specifies the maximum column length in bytes.")]),e._v(" "),a("p",[a("strong",[a("code",[e._v("TINYBLOB")])]),e._v(":    For BLOBs (Binary Large OBjects). Max length: 255 bytes")]),e._v(" "),a("p",[a("strong",[a("code",[e._v("TINYTEXT")])]),e._v(":    Holds a string with a maximum length of 255 characters")]),e._v(" "),a("p",[a("strong",[a("code",[e._v("TEXT(size)")])]),e._v(":  Holds a string with a maximum length of 65,535 bytes")]),e._v(" "),a("p",[a("strong",[a("code",[e._v("BLOB(size)")])]),e._v(":  For BLOBs (Binary Large OBjects). Holds up to 65,535 bytes of data")]),e._v(" "),a("p",[a("strong",[a("code",[e._v("MEDIUMTEXT")])]),e._v(":  Holds a string with a maximum length of 16,777,215 characters")]),e._v(" "),a("p",[a("strong",[a("code",[e._v("MEDIUMBLOB")])]),e._v(":  For BLOBs (Binary Large OBjects). Holds up to 16,777,215 bytes of data")]),e._v(" "),a("p",[a("strong",[a("code",[e._v("LONGTEXT")])]),e._v(":    Holds a string with a maximum length of 4,294,967,295 characters")]),e._v(" "),a("p",[a("strong",[a("code",[e._v("LONGBLOB")])]),e._v(":    For BLOBs (Binary Large OBjects). Holds up to 4,294,967,295 bytes of data")]),e._v(" "),a("h2",{attrs:{id:"numeric-data-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#numeric-data-types"}},[e._v("#")]),e._v(" Numeric data types:")]),e._v(" "),a("p",[a("strong",[a("code",[e._v("BIT(size)")])]),e._v(":   A bit-value type. The number of bits per value is specified in size. The size parameter can hold a value from 1 to 64. The default value for size is 1.")]),e._v(" "),a("p",[a("strong",[a("code",[e._v("TINYINT(size)")])]),e._v(":   A very small integer. Signed range is from -128 to 127. Unsigned range is from 0 to 255. The size parameter specifies the maximum display width (which is 255)")]),e._v(" "),a("p",[a("strong",[a("code",[e._v("BOOL")])]),e._v(":    Zero is considered as false, nonzero values are considered as true.\nBOOLEAN Equal to BOOL")]),e._v(" "),a("p",[a("strong",[a("code",[e._v("SMALLINT(size)")])]),e._v(":  A small integer. Signed range is from -32768 to 32767. Unsigned range is from 0 to 65535. The size parameter specifies the maximum display width (which is 255)")]),e._v(" "),a("p",[a("strong",[a("code",[e._v("MEDIUMINT(size)")])]),e._v(": A medium integer. Signed range is from -8388608 to 8388607. Unsigned range is from 0 to 16777215. The size parameter specifies the maximum display width (which is 255)")]),e._v(" "),a("p",[a("strong",[a("code",[e._v("INT(size)")])]),e._v(":   A medium integer. Signed range is from -2147483648 to 2147483647. Unsigned range is from 0 to 4294967295. The size parameter specifies the maximum display width (which is 255)")]),e._v(" "),a("p",[a("strong",[a("code",[e._v("INTEGER(size)")])]),e._v(":   Equal to INT(size)")]),e._v(" "),a("p",[a("strong",[a("code",[e._v("BIGINT(size)")])]),e._v(":    A large integer. Signed range is from -9223372036854775808 to 9223372036854775807. Unsigned range is from 0 to 18446744073709551615. The size parameter specifies the maximum display width (which is 255)")]),e._v(" "),a("p",[a("strong",[a("code",[e._v("FLOAT(size, d)")])]),e._v(":  A floating point number. The total number of digits is specified in size. The number of digits after the decimal point is specified in the d parameter. This syntax is deprecated in MySQL 8.0.17, and it will be removed in future MySQL versions")]),e._v(" "),a("p",[a("strong",[a("code",[e._v("FLOAT(p)")])]),e._v(":    A floating point number. MySQL uses the p value to determine whether to use FLOAT or DOUBLE for the resulting data type. If p is from 0 to 24, the data type becomes FLOAT(). If p is from 25 to 53, the data type becomes DOUBLE()")]),e._v(" "),a("p",[a("strong",[a("code",[e._v("DOUBLE(size, d)")])]),e._v(": A normal-size floating point number. The total number of digits is specified in size. The number of digits after the decimal point is specified in the d parameter")]),e._v(" "),a("p",[a("strong",[a("code",[e._v("DECIMAL(size, d)")])]),e._v(":    An exact fixed-point number. The total number of digits is specified in size. The number of digits after the decimal point is specified in the d parameter. The maximum number for size is 65. The maximum number for d is 30. The default value for size is 10. The default value for d is 0.")]),e._v(" "),a("p",[a("strong",[a("code",[e._v("DEC(size, d)")])]),e._v(":    Equal to DECIMAL(size,d)")]),e._v(" "),a("h2",{attrs:{id:"date-and-time-data-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#date-and-time-data-types"}},[e._v("#")]),e._v(" Date and Time data types:")]),e._v(" "),a("p",[a("strong",[a("code",[e._v("DATE")])]),e._v(":    A date. Format: YYYY-MM-DD. The supported range is from '1000-01-01' to '9999-12-31'")]),e._v(" "),a("p",[a("strong",[a("code",[e._v("DATETIME(fsp)")])]),e._v(":   A date and time combination. Format: YYYY-MM-DD hh:mm:ss. The supported range is from '1000-01-01 00:00:00' to '9999-12-31 23:59:59'. Adding DEFAULT and ON UPDATE in the column definition to get automatic initialization and updating to the current date and time")]),e._v(" "),a("p",[a("strong",[a("code",[e._v("TIMESTAMP(fsp)")])]),e._v(":  A timestamp. TIMESTAMP values are stored as the number of seconds since the Unix epoch ('1970-01-01 00:00:00' UTC). Format: YYYY-MM-DD hh:mm:ss. The supported range is from '1970-01-01 00:00:01' UTC to '2038-01-09 03:14:07' UTC. Automatic initialization and updating to the current date and time can be specified using DEFAULT CURRENT_TIMESTAMP and ON UPDATE CURRENT_TIMESTAMP in the column definition")]),e._v(" "),a("p",[a("strong",[a("code",[e._v("TIME(fsp)")])]),e._v(":   A time. Format: hh:mm:ss. The supported range is from '-838:59:59' to '838:59:59'")]),e._v(" "),a("p",[a("strong",[a("code",[e._v("YEAR")])]),e._v(":    A year in four-digit format. Values allowed in four-digit format: 1901 to 2155, and 0000.")]),e._v(" "),a("p",[a("br"),a("br"),a("br"),a("br"),a("br")]),a("hr"),e._v("\nThis page is "),a("b",[e._v("open source")]),e._v(". Noticed a typo or something's unclear? "),a("a",{attrs:{href:"https://github.com/kasfy/kasfy.github.io",target:"_blank",rel:"noopener noreferrer"}},[e._v("Improve this page on GitHub"),a("OutboundLink")],1),a("p")])}),[],!1,null,null,null);t.default=r.exports}}]);